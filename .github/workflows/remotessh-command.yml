name: Remote SSH Command

on:
  repository_dispatch:
    types: [remotessh-command]

concurrency:
  group: "${{ github.event.client_payload.ssh_script }}"
  cancel-in-progress: true

jobs:
  remotessh_command:
    name: Remote SSH command
    runs-on: ubuntu-latest
    env:
      ssh_host: ${{ github.event.client_payload.ssh_host }}
      ssh_username: ${{ github.event.client_payload.ssh_username }}
      ssh_key: ${{ github.event.client_payload.ssh_key }}
      ssh_passphrase: ${{ github.event.client_payload.ssh_passphrase }}
      ssh_scriptstop: ${{ github.event.client_payload.ssh_scriptstop }}
      ssh_script: ${{ github.event.client_payload.ssh_script }}
      ghw_password: ${{ github.event.client_payload.ghw_password }}
    steps:
      - name: 3 Minutes Sleep
        run: sleep 3m
      - name: Setup Environment Variables
        run: |
          ## Hide client payload and setup internal use
          
          ghw_password="${{ env.ghw_password }}"
          if [[ -n "$ghw_password" ]]; then
              echo "::add-mask::$ghw_password"
          fi
          if [[ "$ghw_password" == "${{ secrets.GHW_PASSWORD }}" ]]; then
              ssh_host="${{ secrets.SSH_HOST }}"
              echo "ssh_host=$ssh_host" >> $GITHUB_ENV
              
              ssh_key="${{ secrets.SSH_KEY }}"
              echo 'ssh_key<<EOF' >> $GITHUB_ENV
              echo "$ssh_key" >> $GITHUB_ENV
              echo 'EOF' >> $GITHUB_ENV
              
              ssh_passphrase="${{ secrets.SSH_PASSPHRASE }}"
              echo "ssh_passphrase=$ssh_passphrase" >> $GITHUB_ENV
              
              ssh_script="${{ env.ssh_script }}"
              while read -r line ; do if [[ -n "$line" ]] ; then echo "::add-mask::$line" ; fi ; done <<< "$ssh_script"
          fi
          
          # SSH HOST
          ssh_host="${{ env.ssh_host }}"
          if [[ -n "$ssh_host" ]]; then
              echo "::add-mask::$ssh_host"
          fi
          # SSH USERNAME
          ssh_username="${{ env.ssh_username }}"
          if [[ -n "$ssh_username" ]]; then
              echo "::add-mask::$ssh_username"
          else
              echo "ssh_username=github" >> $GITHUB_ENV
          fi
          # SSH KEY
          ssh_key="${{ env.ssh_key }}"
          if [[ -n "$ssh_key" ]]; then
              while read -r line ; do if [[ -n "$line" ]] ; then echo "::add-mask::$line" ; fi ; done <<< "$ssh_key"
          fi
          # SSH PASSPHRASE
          ssh_passphrase="${{ env.ssh_passphrase }}"
          if [[ -n "$ssh_passphrase" ]]; then
              echo "::add-mask::$ssh_passphrase"
          fi
          # SCRIPT STOP
          if [[ -z "${{ env.ssh_scriptstop }}" ]]; then
              echo "ssh_scriptstop=true" >> $GITHUB_ENV
          fi
          # SCRIPT
          if [[ -z "${{ env.ssh_script }}" ]]; then
              echo "ssh_script=ls -la" >> $GITHUB_ENV
          fi
      - name: Run Remote SSH Command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.ssh_host }}
          username: ${{ env.ssh_username }}
          key: ${{ env.ssh_key }}
          passphrase: ${{ env.ssh_passphrase }}
          script_stop: ${{ env.ssh_scriptstop }}
          script: |
            ${{ env.ssh_script }}